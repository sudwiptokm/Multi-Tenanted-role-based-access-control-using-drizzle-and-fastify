{"version":3,"file":"zennv.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport type Zennv<S> = {\n  dotenv: boolean;\n  schema: S;\n  data?: Record<string, any>;\n};\n\nconst cast = {\n  string_to_number: (value: string) => Number(value),\n  string_to_boolean: (value: string) => value === 'true',\n  undefined_to_string: (value: string) => value,\n  undefined_to_number: (value: string) => Number(value),\n  undefined_to_boolean: (value: string) => value === 'true',\n};\n\n// @ts-ignore\nfunction set(obj, prop, value) {\n  return (obj[prop] = value);\n}\n\nexport const main = <S extends z.AnyZodObject>({\n  dotenv = true,\n  schema,\n  data,\n}: Zennv<S>): z.infer<S> => {\n  const processEnv = (data || process.env) as Record<keyof z.infer<S>, string>;\n\n  if (dotenv) {\n    const dotenv = require('dotenv');\n    dotenv.config();\n  }\n\n  const shape = schema.shape;\n\n  const keys = Object.keys(shape) as (keyof z.infer<S>)[];\n\n  const envKeys = Object.keys(processEnv) as (keyof z.infer<S>)[];\n\n  const result = {} as Record<keyof z.infer<S>, any>;\n\n  for (const key of envKeys) {\n    if (keys.includes(key)) {\n      result[key] = processEnv[key];\n    }\n  }\n\n  const env = (schema as z.AnyZodObject).safeParse(result);\n\n  if (env.success) {\n    return env.data;\n  }\n\n  const errors = env.error;\n\n  for (const error of errors.errors) {\n    const path = error.path[0];\n\n    if (error.code === 'invalid_type') {\n      const fnPath = `${error.received}_to_${error.expected}` as keyof typeof cast;\n\n      const fn = cast[fnPath];\n\n      if (!fn) {\n        console.error(error);\n        throw new Error(`No cast function for ${fnPath} - ${path}`);\n      }\n\n      const value = fn(result[path]);\n\n      set(result, path, value);\n    }\n  }\n\n  return (schema as z.AnyZodObject).parse(result);\n};\n\nexport default main;\n"],"names":["cast","string_to_number","value","Number","string_to_boolean","undefined_to_string","undefined_to_number","undefined_to_boolean","set","obj","prop","main","_ref","dotenv","_ref$dotenv","schema","data","processEnv","process","env","require","config","shape","keys","Object","envKeys","result","_i","_envKeys","length","key","includes","safeParse","success","errors","error","_iterator","_createForOfIteratorHelperLoose","_step","done","path","code","fnPath","received","expected","fn","console","Error","parse"],"mappings":"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"}